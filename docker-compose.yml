services: 
  nginx:
    image: nginx:stable-alpine3.19-slim
    container_name: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    command: ['nginx', '-g', 'daemon off;']

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    container_name: kafdrop
    restart: always
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - kafka1
      - kafka2
      - kafka3      

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: zookeeper
    restart: always  
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - 22181:22181

  kafka1:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka1
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29091:29091
      - 29191:29191      
      - 29291:29291            
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://kafka1:29091,EXTERNALDOCKER://host.docker.internal:29191,EXTERNALSERVER://192.168.45.32:29291
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,EXTERNALDOCKER:PLAINTEXT,EXTERNALSERVER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 100001200
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 10000000
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3

  kafka2:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka2 
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 29192:29192   
      - 29292:29292                    
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://kafka2:29092,EXTERNALDOCKER://host.docker.internal:29192,EXTERNALSERVER://192.168.45.32:29292
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,EXTERNALDOCKER:PLAINTEXT,EXTERNALSERVER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 100001200
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 10000000
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3  

  kafka3:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka3
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29093:29093
      - 29193:29193      
      - 29293:29293                  
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://kafka3:29093,EXTERNALDOCKER://host.docker.internal:29193,EXTERNALSERVER://192.168.45.32:29293
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,EXTERNALDOCKER:PLAINTEXT,EXTERNALSERVER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 100001200
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 10000000
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3  

  user-maria:
    image: mariadb:10.9.4
    container_name: user-maria
    restart: always
    env_file: 
      - ./user/user.env
    ports:
      - 3306:3306
    volumes:
      - ./mariadb/user/data:/var/lib/mysql
      - ./mariadb/user/conf.d:/etc/mysql/conf.d

  user-mongo:
    image: mongo:6.0.3
    container_name: user-mongo
    restart: always
    env_file:
      - ./user/user.env
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/user/db:/data/db

  auth-mongo:
    image: mongo:6.0.3
    container_name: auth-mongo
    restart: always
    env_file:
      - ./auth/auth.env
    ports:
      - 27018:27017
    volumes:
      - ./mongodb/auth/db:/data/db

  auth:
    image: simson613/webrtc-auth:0.0.1
    container_name: auth-service
    restart: always
    env_file:
      - ./auth/auth.env
    ports:
      - 5011:5011
    depends_on:
      - auth-mongo
      - kafdrop

  user:
    image: simson613/webrtc-user:0.0.1
    container_name: user-service
    restart: always
    env_file:
      - ./user/user.env
    ports:
      - 5021:5021
    depends_on:
      - user-maria
      - user-mongo

  stream:
    image: simson613/webrtc-stream:0.0.1
    container_name: stream-service
    restart: always
    env_file:
      - ./streaming/stream.env

